CREATE DATABASE IF NOT EXISTS GAIT;

USE GAIT;

CREATE TABLE IF NOT EXISTS distributors(
	id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(45) NOT NULL,
  email VARCHAR(255) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  location VARCHAR(45) NOT NULL
);

CREATE TABLE IF NOT EXISTS roles(
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(45) NOT NULL,
  description TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS users(
	id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(45) NOT NULL,
  lastname VARCHAR(45) NOT NULL,
  email VARCHAR(255) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  state TINYINT DEFAULT 0,
  phone VARCHAR(20) NOT NULL,
  id_distributor INT NOT NULL,
  id_role INT NOT NULL,
  FOREIGN KEY (id_role) REFERENCES roles(id) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (id_distributor) REFERENCES distributors(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS categories(
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(45) NOT NULL UNIQUE,
  description TEXT NOT NULL
);

CREATE TABLE brands (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(45) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS products(
	id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(45) NOT NULL UNIQUE,
  price DECIMAL(10, 2) NOT NULL CHECK (price > 0),
  discount DECIMAL(10, 2),
  stock INT DEFAULT 0 CHECK (stock >= 0),
  id_brand INT NOT NULL,
  id_category INT NOT NULL,
  FOREIGN KEY (id_brand) REFERENCES brands(id) ON DELETE CASCADE,
  FOREIGN KEY (id_category) REFERENCES categories(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS orders(
	id INT AUTO_INCREMENT PRIMARY KEY,
  total DECIMAL(10, 2) NOT NULL,
  id_user INT NOT NULL,
  id_distributor INT NOT NULL,
  order_date DATETIME NOT NULL,
  dispatch_date DATETIME NOT NULL,
  delivery_date DATETIME NOT NULL,
  FOREIGN KEY (id_user) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (id_distributor) REFERENCES distributors(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS order_products(
	id INT AUTO_INCREMENT PRIMARY KEY,
	id_order INT NOT NULL,
  id_product INT NOT NULL,
  quantity INT NOT NULL CHECK (quantity > 0),
  unit_price DECIMAL(10, 2) NOT NULL CHECK (unit_price > 0),
  subtotal DECIMAL(10, 2) NOT NULL CHECK (subtotal > 0),
  FOREIGN KEY (id_order) REFERENCES orders(id) ON DELETE CASCADE,
  FOREIGN KEY (id_product) REFERENCES products(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS payment_methods(
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(45) NOT NULL UNIQUE,
  description TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS payments(
	id INT AUTO_INCREMENT PRIMARY KEY,
	id_order INT NOT NULL,
	id_payment_method INT NOT NULL,
  amount DECIMAL(10, 2) NOT NULL CHECK (amount > 0),
  status ENUM('PENDING', 'COMPLETED', 'FAILED') DEFAULT 'PENDING',
  FOREIGN KEY (id_order) REFERENCES orders(id) ON DELETE CASCADE,
  FOREIGN KEY (id_payment_method) REFERENCES payment_methods(id) ON DELETE CASCADE
);
